(defun tty/rotate-list (list n)
  (let (turing)
    (cond ((>= n 0)
	   (dotimes (_ n list)
	     (setq turing (pop list))
	     (setq list (nreverse list))
	     (push turing list)
	     (setq list (nreverse list))))
	  ((< n 0)
	   (dotimes (_ (abs n) list)
	     (setq list (nreverse list))
	     (setq turing (pop list))
	     (setq list (nreverse list))
	     (push turing list))))))

(tty/rotate-list '(a b c d e f g h) 3)
;; => (d e f g h a b c)

(tty/rotate-list '(a b c d e f g h) -2)
;; => (g h a b c d e f)
